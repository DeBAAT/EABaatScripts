<?xml version="1.0" encoding="Windows-1252" standalone="no"?>
<RefData version="1.0" exporter="EA.25">
	<DataSet name="Automation Scripts" table="t_script" filter="ScriptName='#ScriptName#' and ScriptCategory='#ScriptCategory#'" stoplist=";ScriptID;">
	<DataRow>
			<Column name="ScriptID" value="2" />
			<Column name="ScriptCategory" value="3955A83E-9E54-4810-8053-FACC68CD4782" />
			<Column name="ScriptName" value="{3A1A3FB0-AE40-4616-9330-C198D3C70ADF}" />
			<Column name="Notes" value="&lt;Group Type=&quot;PROJBROWSER&quot; Notes=&quot;&quot;/&gt;" />
			<Column name="Script" value="BaatPackageScripts" />
		</DataRow><DataRow>
			<Column name="ScriptID" value="3" />
			<Column name="ScriptCategory" value="605A62F7-BCD0-4845-A8D0-7DC45B4D2E3F" />
			<Column name="ScriptName" value="{8D07689B-D5F3-4a0a-B425-DF228D486138}" />
			<Column name="ScriptAuthor" value="{3A1A3FB0-AE40-4616-9330-C198D3C70ADF}" />
			<Column name="Notes" value="&lt;Script Name=&quot;ModelCountDuplicateTaggedValues&quot; Type=&quot;Internal&quot; Language=&quot;JavaScript&quot;/&gt;" />
			<Column name="Script" value="//[group=BaatPackageScripts]&#xA;!INC Local Scripts.EAConstants-JavaScript&#xA;&#xA;/*&#xA; * This code has been included from the default Project Browser template.&#xA; * &#xA; * Script Name:&#x9;ModelCountDuplicateTaggedValues&#xA; * Author:      J de Baat&#xA; * Purpose:     Count all duplicate TaggedValues present in this model&#xA; * &#x9;&#x9;&#x9;&#x9;NOTE: A TaggedValue is a duplicate if the Name AND Value are identical&#xA; * Date:        19-08-2023&#xA; * &#xA; */&#xA;&#xA;/*&#xA; * Get all duplicate values from the t_objectproperties table&#xA; */&#xA;function GetDuplicateTaggedValues()&#xA;{&#xA;&#xA;&#x9;// Get all the Object_IDs for which there are duplicates&#xA;&#x9;var strSQLQuery = &quot;select op1.Object_ID, op1.Property from t_objectproperties op1&quot;&#xA;                      + &quot; where exists (select 1 from t_objectproperties op2 &quot;&#xA;                      +&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot; where op1.Property   = op2.Property   &quot;&#xA;                      +&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;   and op1.Object_ID  = op2.Object_ID  &quot;&#xA;                      +&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;   and op1.Value      = op2.Value      &quot;&#xA;                      +&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot;   and op1.PropertyID &lt; op2.PropertyID &quot;&#xA;                      +&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&quot; )&quot;&#xA;                      + &quot; order by op1.Object_ID; &quot;;&#xA;&#x9;var sqlResponse = Repository.SQLQuery( strSQLQuery );&#xA;&#x9;Session.Output(&quot;strSQLQuery found sqlResponse= &quot; + sqlResponse + &quot;!!!&quot; );&#xA;&#xA;&#x9;// Convert the sqlResponse from XML to an array of Object_IDs&#xA;&#x9;var arrResponse = convertXMLtoTagNameArray( sqlResponse, &quot;Object_ID&quot; );&#xA;&#xA;&#x9;return arrResponse;&#xA;&#xA;}&#xA;&#xA;/*&#xA; * Extract an array from the XML resultset of an SQLQuery based on the xmlTagName&#xA; */&#xA;function convertXMLtoTagNameArray( xmlString, xmlTagName )&#xA;{&#xA;&#xA;&#x9;var xmlDOM = new COMObject( &quot;MSXML2.DOMDocument&quot; );&#xA;&#x9;xmlDOM.validateOnParse = false;&#xA;&#x9;xmlDOM.async = false;&#xA;&#x9;if ( xmlDOM.loadXML( xmlString ) ){&#xA;&#x9;&#x9;var nodeList = xmlDOM.documentElement.selectNodes( '//' + xmlTagName );&#xA;&#x9;&#x9;if ( nodeList.length &gt; 0 ) {&#xA;&#x9;&#x9;&#x9;return nodeList;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;return false;&#xA;&#xA;}&#xA;&#xA;/*&#xA; * Project Browser Script main function&#xA; */&#xA;function ModelCountDuplicateTaggedValues()&#xA;{&#xA;&#x9;// Get the type of element selected in the Project Browser&#xA;&#x9;var treeSelectedType = Repository.GetTreeSelectedItemType();&#xA;&#x9;var curElement as EA.Element;&#xA;&#x9;var strDuplicateTaggedValues = &quot;&quot;;&#xA;&#x9;var intDuplicateTaggedValues = 8;&#xA;&#xA;&#x9;Session.Output(&quot;+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++&quot; );&#xA;&#xA;&#x9;strDuplicateTaggedValues = GetDuplicateTaggedValues();&#xA;&#xA;&#x9;// Process the strDuplicateTaggedValues found&#xA;&#x9;if ( strDuplicateTaggedValues.length &gt; 0 ) {&#xA;&#xA;&#x9;&#x9;Session.Output(&quot;Found &quot; + strDuplicateTaggedValues.length + &quot; duplicates:&quot; );&#xA;&#xA;&#x9;&#x9;if ( strDuplicateTaggedValues.length &lt;= 10 ) {&#xA;&#x9;&#x9;&#x9;intDuplicateTaggedValues = strDuplicateTaggedValues.length;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;// Show info found for max intDuplicateTaggedValues&#xA;&#x9;&#x9;for ( var i = 0 ; i &lt; intDuplicateTaggedValues ; i++ ) {&#xA;&#x9;&#x9;&#x9;curElement = Repository.GetElementByID( strDuplicateTaggedValues.item(i).text );&#xA;&#x9;&#x9;&#x9;Session.Output(&quot;==&gt; duplicate curElement[&quot; + strDuplicateTaggedValues.item(i).text + &quot;].Name= &quot; + curElement.Name + &quot;!!!&quot; );&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;Session.Prompt( &quot;Found &quot; + strDuplicateTaggedValues.length + &quot; duplicates.&quot;, promptOK);&#xA;&#x9;} else {&#xA;&#x9;&#x9;Session.Output(&quot;Found NO valid strDuplicateTaggedValues!!!&quot; );&#xA;&#x9;&#x9;Session.Prompt( &quot;Found NO valid strDuplicateTaggedValues!!!&quot;, promptOK);&#xA;&#x9;}&#xA;&#xA;&#x9;Session.Output(&quot;===========================================================================================&quot; );&#xA;&#xA;}&#xA;&#xA;ModelCountDuplicateTaggedValues();&#xA;" />
		</DataRow></DataSet>
</RefData>